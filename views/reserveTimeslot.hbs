<div class="container mt-5">
    <h2 class="text-center mb-4">Reserve Lab Timeslot</h2>
    
    <style>
    .lab-layout-seat20,.lab-layout-seat15,.lab-layout-seat25 {
    display: flex;
    gap: 30px;
    justify-content: space-evenly;
    gap: 40px;
    font-size: 1.5em;
    font-family: 'Courier New', Courier, monospace;
    }

    .left-table,
    .center-table-1,
    .center-table-2,
    .center-table-3,
    .right-table {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
        padding: 1px;
        background: #ccc; /* Table */
        border-radius: 5px;
        text-align: center;
        justify-content: center;
        place-items: center;
    }

    .left-table,.right-table{
        width:180px;
        height: 280px;
        align-self: center;
    }

    .left-table{
        flex-direction: column;
        justify-content: flex-start;
        
    }

    .right-table{
        flex-direction: column;
        justify-content: flex-end;
    }

    .center-container{
        display: flex;
        align-content: space-around;
        align-items: center; 
        flex-direction: column;
        gap: 20px;
    }

    .center-table-1, .center-table-2, .center-table-3{
        flex-direction: row;
    }

    .center-table-1, .center-table-2, .center-table-3{
        width:300px;
        height:180px;
    }

    .seat {
        width: 50px;
        height: 50px;
        background-color: lightgreen;
        border: 1px solid black;
        line-height: 50px;
        cursor: pointer;
    }

    .seat.reserved {
        background-color: lightcoral;
    }

    .seat.reserved-by-user {
        background-color: #ff6b6b;
        cursor: pointer;
    }

    .seat.reserved-by-user:hover {
        background-color: #ff5252;
        transform: scale(1.05);
    }

    .seat:hover {
        background-color: yellow;
    }
    </style>

    <div class="row mb-4">
        <div class="col-md-6">
            <label for="lab-dropdown" class="form-label">Select a Laboratory:</label>
            <select id="lab-dropdown" class="form-select">
                <option value="">Select a Laboratory</option>
                {{#each labs}}
                    <option value="{{labId}}">
                    Lab {{labId}} - Room {{room}} ({{seats}} seats)
                    </option>
                {{/each}}
            </select>
        </div>
        <div class="col-md-6">
            <label for="timeslot-dropdown" class="form-label">Select a Timeslot:</label>
            <select id="timeslot-dropdown" class="form-select">
                <option value="">Select a Timeslot</option>
            </select>
        </div>
    </div>

    <div class="modal fade" id="reservation-confirmation" tabindex="-1" aria-labelledby="confirmReservation" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="Confirm Reservation" id="confirmReservation">Confirm Reservation</h5>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button id="confirm-reservation" class="btn btn-success">Confirm</button>
                    <button type="button" id="cancel-reservation" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Lab Layouts -->
    <div class="lab-layout-seat20 d-none">
        <div class="left-table">
            <button class="seat" id="seat-A1">A1</button>
            <button class="seat" id="seat-A2">A2</button>
            <button class="seat" id="seat-A3">A3</button>
            <button class="seat" id="seat-A4">A4</button>
            <button class="seat" id="seat-A5">A5</button>
        </div>
        <div class="center-container">
            <div class="center-table-1">
                <button class="seat" id="seat-B1">B1</button>
                <button class="seat" id="seat-B2">B2</button>
                <button class="seat" id="seat-B3">B3</button>
                <button class="seat" id="seat-B4">B4</button>
                <button class="seat" id="seat-B5">B5</button>
            </div>

            <div class="center-table-2">
                <button class="seat" id="seat-C1">C1</button>
                <button class="seat" id="seat-C2">C2</button>
                <button class="seat" id="seat-C3">C3</button>
                <button class="seat" id="seat-C4">C4</button>
                <button class="seat" id="seat-C5">C5</button>
            </div>
        </div>
        

        <div class="right-table">
            <button class="seat" id="seat-D1">D1</button>
            <button class="seat" id="seat-D2">D2</button>
            <button class="seat" id="seat-D3">D3</button>
            <button class="seat" id="seat-D4">D4</button>
            <button class="seat" id="seat-D5">D5</button>
        </div>
    </div>

    <div class="lab-layout-seat15 d-none">
        <div class="left-table">
            <button class="seat" id="seat-A1">A1</button>
            <button class="seat" id="seat-A2">A2</button>
            <button class="seat" id="seat-A3">A3</button>
            <button class="seat" id="seat-A4">A4</button>
            <button class="seat" id="seat-A5">A5</button>
        </div>
        <div class="center-container">
            <div class="center-table-1">
                <button class="seat" id="seat-B1">B1</button>
                <button class="seat" id="seat-B2">B2</button>
                <button class="seat" id="seat-B3">B3</button>
                <button class="seat" id="seat-B4">B4</button>
                <button class="seat" id="seat-B5">B5</button>
            </div>

            <div class="right-table">
                <button class="seat" id="seat-C1">C1</button>
                <button class="seat" id="seat-C2">C2</button>
                <button class="seat" id="seat-C3">C3</button>
                <button class="seat" id="seat-C4">C4</button>
                <button class="seat" id="seat-C5">C5</button>
            </div>
        </div>
    </div>

    <div class="lab-layout-seat25 d-none">
        <div class="left-table">
            <button class="seat" id="seat-A1">A1</button>
            <button class="seat" id="seat-A2">A2</button>
            <button class="seat" id="seat-A3">A3</button>
            <button class="seat" id="seat-A4">A4</button>
            <button class="seat" id="seat-A5">A5</button>
        </div>

        <div class="center-container">
            <div class="center-table-1">
                <button class="seat" id="seat-B1">B1</button>
                <button class="seat" id="seat-B2">B2</button>
                <button class="seat" id="seat-B3">B3</button>
                <button class="seat" id="seat-B4">B4</button>
                <button class="seat" id="seat-B5">B5</button>
            </div>

            <div class="center-table-2">
                <button class="seat" id="seat-C1">C1</button>
                <button class="seat" id="seat-C2">C2</button>
                <button class="seat" id="seat-C3">C3</button>
                <button class="seat" id="seat-C4">C4</button>
                <button class="seat" id="seat-C5">C5</button>
            </div>

            <div class="center-table-3">
                <button class="seat" id="seat-D1">D1</button>
                <button class="seat" id="seat-D2">D2</button>
                <button class="seat" id="seat-D3">D3</button>
                <button class="seat" id="seat-D4">D4</button>
                <button class="seat" id="seat-D5">D5</button>
            </div>
        </div>

        <div class="right-table">
            <button class="seat" id="seat-E1">E1</button>
            <button class="seat" id="seat-E2">E2</button>
            <button class="seat" id="seat-E3">E3</button>
            <button class="seat" id="seat-E4">E4</button>
            <button class="seat" id="seat-E5">E5</button>
        </div>
    </div>

     <div class="position-relative">
        <div class="position-absolute bottom-2 end-0 p-2 bg-info text-white">
                <label for="shopping-cart">Finalize Reservation</label>
                <button id="shopping-cart" class="btn btn-light">
                    <img src="shopping_cart.png" alt="Cart" width="30">
                </button>
        </div>
    </div>

    <div class="modal fade" id="reservation-finalization" tabindex="-1" aria-labelledby="finalizeReservation" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="Finalize Reservation" id="finalizeReservation">Finalize Reservation</h5>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button id="finalize-reservation-confirm" class="btn btn-success">Confirm</button>
                    <button type="button" id="cancel-finalize-reservation" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" id="user-firstname" value="{{user.firstname}}">
    <input type="hidden" id="user-email" value="{{user.email}}">


    <script>
        let reservationCart = [];

        class Reservation{
            constructor(name, labId, room, day, startTime, endTime, seat){
                this.name=name
                this.labId = labId
                this.room = room
                this.day = day
                this.startTime = startTime
                this.endTime =  endTime
                this.seat = seat
            }
        }

        //Reservation System Code
        $(document).ready(function(){
            $(".seat").click(function(){
                // Check if lab and timeslot are selected
                const selectedLabId = $("#lab-dropdown").val();
                const selectedSlotId = $("#timeslot-dropdown").val();
                
                if (!selectedLabId) {
                    alert("Please select a laboratory first!");
                    return;
                }
                
                if (!selectedSlotId) {
                    alert("Please select a timeslot first!");
                    return;
                }

                // Check if seat is already reserved
                if ($(this).hasClass("reserved")) {
                    alert("Seat is already reserved!");
                    return;
                }

                const laboratories = {{{json labs}}}; //labs passed from the controller
                let seatId = $(this).attr("id").replace("seat-", ""); // Get seat ID
                let selectedLab = laboratories.find(lab => String(lab.labId) === String(selectedLabId));
                let selectedSlot = selectedLab.timeslots.find(slot => slot.slotId == selectedSlotId);
                
                console.log("seat selected:", seatId);

                $("#reservation-confirmation .modal-body").html(`
                    <p>Room: ${selectedLab.room}</p>
                    <p>Day: ${selectedSlot.day}</p>
                    <p>Start Time: ${selectedSlot.startTime} --- End Time: ${selectedSlot.endTime}</p>
                    <p>Seat Number: ${seatId}</p>

                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="anonymous-checkbox">
                        <label class="form-check-label" for="anonymous-checkbox">
                            Remain Anonymous
                        </label>
                    </div>
                `);

                $("#reservation-confirmation").modal("show");

                $("#confirm-reservation").off("click").on("click", function () {
                    const isAnonymous = $("#anonymous-checkbox").prop("checked");
                    const firstname = $("#user-firstname").val();

                    reservationCart.push({
                        name: isAnonymous ? "Anonymous" : firstname,
                        labId: selectedLabId,
                        room: selectedLab.room,
                        day: selectedSlot.day,
                        startTime: selectedSlot.startTime,
                        endTime: selectedSlot.endTime,
                        slotId: selectedSlotId,
                        seat: seatId
                    });

                    // Disable button visually
                    $(`#seat-${seatId}`).addClass("reserved").prop("disabled", true);
                    $("#reservation-confirmation").modal("hide");
                    
                    console.log("Reservation added to cart:", reservationCart);
                });
                
                $("#cancel-reservation").click(function(){
                    $("#reservation-confirmation").modal("hide");
                });
            });
        });

        
        //populating the timeslots
        $(document).on("change", "#lab-dropdown", function () {
            const selectedLabId = $(this).val();
            const laboratories = {{{json labs}}}; // labs passed from the controller
            const selectedLab = laboratories.find(lab => String(lab.labId) === String(selectedLabId));

            const timeslotDropdown = $("#timeslot-dropdown").empty();
            timeslotDropdown.append('<option value="">Select a Timeslot</option>');

            if (selectedLab && selectedLab.timeslots) {
                selectedLab.timeslots.forEach(slot => {
                    const totalSeats = Object.keys(slot.seats).length;
                    const availableSeats = Object.values(slot.seats).filter(Boolean).length;
                    const label = `${slot.day} - ${slot.startTime} to ${slot.endTime} (${availableSeats}/${totalSeats} seats available)`;
                    timeslotDropdown.append(`<option value="${slot.slotId}">${label}</option>`);
                });
            }
        });
        
        //displaying the seats
        $(document).on("change", "#lab-dropdown", function (){
            let selectedLabId = $(this).val();
            // Hide all seat layouts
            $(".lab-layout-seat20, .lab-layout-seat15, .lab-layout-seat25").addClass("d-none");

            // Show the correct layout based on selected lab
            if (selectedLabId === "123" || selectedLabId === "125" || selectedLabId === "127") {
                $(".lab-layout-seat20").removeClass("d-none");
            } else if (selectedLabId === "126") {
                $(".lab-layout-seat15").removeClass("d-none");
            } else if (selectedLabId === "124") {
                $(".lab-layout-seat25").removeClass("d-none");
            }

            // Clear timeslot dropdown when lab changes
            $("#timeslot-dropdown").val("").trigger("change");
        });

        // Update seat availability when timeslot is selected
        $(document).on("change", "#timeslot-dropdown", function() {
            const selectedLabId = $("#lab-dropdown").val();
            const selectedSlotId = $(this).val();
            
            if (!selectedLabId || !selectedSlotId) {
                // Reset all seats to available
                $(".seat").removeClass("reserved").prop("disabled", false);
                $(".seat").attr("title", "");
                return;
            }

            const laboratories = {{{json labs}}};
            const selectedLab = laboratories.find(lab => String(lab.labId) === String(selectedLabId));
            const selectedSlot = selectedLab.timeslots.find(slot => slot.slotId == selectedSlotId);

            // Reset all seats first
            $(".seat").removeClass("reserved").prop("disabled", false);
            $(".seat").attr("title", "");

            // Mark reserved seats based on the selected timeslot
            if (selectedSlot && selectedSlot.seats) {
                Object.keys(selectedSlot.seats).forEach(seatId => {
                    if (!selectedSlot.seats[seatId]) { // seat is reserved (false)
                        $(`#seat-${seatId}`).addClass("reserved").prop("disabled", true);
                        
                        // Get reservation details for this seat
                        $.get(`/reservation/details/${selectedLabId}/${selectedSlotId}/${seatId}`, function(reservation) {
                            if (reservation && reservation.name && reservation.name !== "Anonymous") {
                                $(`#seat-${seatId}`).attr("title", `Reserved by: ${reservation.name}`);
                                $(`#seat-${seatId}`).addClass("reserved-by-user").data("user-email", reservation.userEmail);
                            } else {
                                $(`#seat-${seatId}`).attr("title", "Reserved anonymously");
                            }
                        }).fail(function() {
                            $(`#seat-${seatId}`).attr("title", "Reserved");
                        });
                    }
                });
            }
        });

        // Handle clicking on reserved seats to view user profile
        $(document).on("click", ".seat.reserved-by-user", function() {
            const userEmail = $(this).data("user-email");
            if (userEmail) {
                window.open(`/profile/${encodeURIComponent(userEmail)}`, '_blank');
            }
        });

        // Note: Seat click handling is now done in the main reservation system code above

        //Reservation Shopping Cart
        $(document).ready(function () {
            $("#shopping-cart").click(function () {
                if (reservationCart.length === 0) {
                    alert("No reservations to finalize. Please select a seat first!");
                    return;
                }
                
                $("#reservation-finalization").modal("show");
                
                let reservationHTML = "<h5>Finalized Reservations</h5><ul class='list-group'>";
                reservationCart.forEach(res => {
                    reservationHTML += `<li class="list-group-item">
                        <strong>${res.name}</strong><br>
                        Lab: ${res.room} | Day: ${res.day}<br>
                        Time: ${res.startTime} - ${res.endTime} | Seat: ${res.seat}
                    </li>`;
                });
                reservationHTML += "</ul>";

                $("#reservation-finalization .modal-body").html(reservationHTML);

                //finalizing the reservations
                $("#finalize-reservation-confirm").off("click").on("click", function () {
                    console.log("Finalizing reservations:", reservationCart);
                    
                    // Send each reservation to the server
                    let completedReservations = 0;
                    const totalReservations = reservationCart.length;
                    
                    reservationCart.forEach(reservation => {
                        $.post("/reserve/create", {
                            labId: reservation.labId,
                            slotId: reservation.slotId,
                            seat: reservation.seat,
                            anonymous: reservation.name === "Anonymous"
                        }, function (response) {
                            completedReservations++;
                            console.log("Reservation created:", response);
                            
                            if (completedReservations === totalReservations) {
                                $("#reservation-finalization").modal("hide");
                                alert("All reservations confirmed successfully!");
                                window.location.href = "/dashboard";
                            }
                        }).fail(function(xhr, status, error) {
                            console.error("Error creating reservation:", error);
                            alert("Error creating reservation. Please try again.");
                        });
                    });
                });
            });
        });

        // Real-time seat availability update every 30 seconds
        setInterval(function() {
            const selectedLabId = $("#lab-dropdown").val();
            const selectedSlotId = $("#timeslot-dropdown").val();
            if (selectedLabId && selectedSlotId) {
                updateSeatAvailability(selectedLabId, selectedSlotId);
            }
        }, 30000); // 30 seconds

        function updateSeatAvailability(labId, slotId) {
            $.get(`/reservation/availability/${labId}/${slotId}`, function(data) {
                // Reset all seats
                $(".seat").removeClass("reserved reserved-by-user").prop("disabled", false);
                $(".seat").attr("title", "");
                // Update based on new data
                Object.keys(data.seats).forEach(seatId => {
                    if (!data.seats[seatId]) { // seat is reserved
                        $(`#seat-${seatId}`).addClass("reserved").prop("disabled", true);
                        if (data.reservations[seatId] && data.reservations[seatId].name !== "Anonymous") {
                            $(`#seat-${seatId}`).attr("title", `Reserved by: ${data.reservations[seatId].name}`);
                            $(`#seat-${seatId}`).addClass("reserved-by-user").data("user-email", data.reservations[seatId].userEmail);
                        } else {
                            $(`#seat-${seatId}`).attr("title", "Reserved anonymously");
                        }
                    }
                });
            }).fail(function() {
                console.log("Failed to update seat availability");
            });
        }

    </script>
</div>
